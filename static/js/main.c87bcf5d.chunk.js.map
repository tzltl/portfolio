{"version":3,"sources":["Top.js","Profile.js","Developments.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","display","width","height","alignItems","justifyContent","margin","background","color","fontSize","letterSpacing","formore","Top","classes","className","title","theme","paddingBottom","heading","typography","pxToRem","flexBasis","flexShrink","fontFamily","fontWeight","secondaryHeading","palette","text","secondary","panel","backgroundColor","border","detail","ExpandMoreIcon","Profile","React","useState","expanded","setExpanded","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","ExpansionPanelDetails","style","textAlign","Developments","href","target","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c87bcf5d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        width: \"100vw\",\n        height: \"90vh\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"0\",\n        background: \"#131313\",\n        color: \"#fff\",\n        fontSize: \"15vw\",\n        letterSpacing: \"-2.2vw\"\n    },\n    formore: {\n        display: \"flex\",\n        width: \"100vw\",\n        height: \"10vh\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"0\",\n        background: \"#131313\",\n        color: \"#fff\",\n        fontSize: \"2vw\",\n        letterSpacing: \"0.6vw\"\n    }\n});\n\nexport default function Top() {\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={classes.root} title=\"portfolio\"> portfolio </div>\n            <div className={classes.formore}> for more ↓ </div>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore.js';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // width: '100%',\n        // background: \"#131313\",\n        // color: \"#fff\",\n        // fontFamily: \"'Courier New', Courier, monospace\",\n        paddingBottom: '1vh'\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontFamily: \"'Courier New', Courier, monospace\",\n        fontWeight: 'bold'\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        color: 'grey',\n        fontFamily: 'inherit',\n    },\n    panel: {\n        backgroundColor: \"#131313\",\n        color: \"#fff\",\n        border: 'thin solid #fff',\n        // borderRadius: '10em',\n    },\n    detail: {\n        backgroundColor: \"#171717\",\n        color: \"inherit\",\n        // border: 'thin solid #fff',\n        // borderRadius: '0.4em',\n    },\n    ExpandMoreIcon: {\n        color: '#fff'\n    }\n}));\n\nexport default function Profile() {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')} className={classes.panel}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon className={classes.ExpandMoreIcon} />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                // style={{ backgroundColor:'#212121'}}\n                >\n                    <Typography className={classes.heading}> Career </Typography>\n                    <Typography className={classes.secondaryHeading}> My career </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.detail}>\n                    <Typography style={{\n                        textAlign: 'left',\n                        fontFamily: \"'Courier New', Courier, monospace\",\n                        fontWeight: '500'\n                    }}>\n                        2012 Apr ~ 2015 Mar: Niigata Prefectural Muikamachi-Senior High School <br />\n                        2015 Apr ~ 2019 Mar: Department of Electrical and Electronic Engineering, Niigata University <br />\n                        2019 Apr ~ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: Graduate School of Science and Technology, Niigata University　<br />\n                        ...<br />\n                        {/* 2021 Apr~: Yahoo!Japan (Web Engineer) */}\n\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore.js';\n// import useStyles from './Profile.js';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // width: '100%',\n        // background: \"#131313\",\n        // color: \"#fff\",\n        // fontFamily: \"'Courier New', Courier, monospace\",\n        paddingBottom: '10vh'\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontFamily: \"'Courier New', Courier, monospace\",\n        fontWeight: 'bold'\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        color: 'grey',\n        fontFamily: 'inherit',\n    },\n    panel: {\n        backgroundColor: \"#131313\",\n        color: \"#fff\",\n        border: 'thin solid #fff',\n        // borderRadius: '10em',\n    },\n    detail: {\n        backgroundColor: \"#171717\",\n        color: \"inherit\",\n        // border: 'thin solid #fff',\n        // borderRadius: '0.4em',\n    },\n    ExpandMoreIcon: {\n        color: '#fff'\n    }\n}));\n\nexport default function Developments() {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    return (\n        <div>\n            <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')} className={classes.panel}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon className={classes.ExpandMoreIcon} />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                // style={{ backgroundColor: '#212121' }}\n                >\n                    <Typography className={classes.heading}> Languages </Typography>\n                    <Typography className={classes.secondaryHeading}> Programming languages ​​I've used </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.detail}>\n                    <Typography style={{\n                        textAlign: 'left',\n                        fontFamily: \"'Courier New', Courier, monospace\",\n                        fontWeight: '500'\n                    }}>\n                        &nbsp; Python &nbsp;           | I use Python in Competition programming. (like AtCoder, Paiza)<br />\n                        &nbsp;&nbsp; Ruby &nbsp;&nbsp; | <a href=\"https://takeshify.herokuapp.com/\" target=\"_blank\" >\n                            TakesHify</a> | Web app using SpotifyAPI (It may take a little bit time to start up server.)<br />\n                        JavaScript                     | This portfolio page. Using React.js, Material-UI. <br />\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Top from './Top.js';\nimport Profile from './Profile.js';\nimport Developments from './Developments.js';\n// import Test from './test.js';\n// import Achievement from './Achievement.js';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    background: 'black',\n    color: 'white',\n  },\n});\n\nfunction App() {\n  // const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <div><Top /></div>\n      <div><Profile /></div>\n      <div><Developments /></div>\n      {/* <div><Test /></div> */}\n      {/* <div style={{ display: 'flex', justifyContent: 'center'}}> */}\n        {/* <div style={{margin:'30px'}}><Work /></div> */}\n        {/* <div style={{ margin: '30px' }}><Achievement /></div> */}\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}